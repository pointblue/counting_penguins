mutate(SEASON_FYR = ifelse(SEASON_FYR == "Long-Term", "Long-Term Full", SEASON_FYR))
View(bb_age_total_summary_joined)
bb_age_total_summary_joined %>%
filter(COLONY == 'CROZ') %>%
ggplot() +
geom_bar(aes(x = age, y = propAge * 100, fill = age), color = 'black', stat = 'Identity') +
scale_fill_steps2(low = "#2A186CFF",
mid = "#3B9287FF",
high = "#FDEF9AFF",
midpoint = 6,
name = 'Age (Years)') +
labs(x = 'Age (Years)', y = 'Percentage of Bands Seen (%)') +
facet_grid(SEASON_FYR~.) +
theme_classic() +
ggtitle("Crozier Historic Age Distribution") +
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(size = 9),  # Adjust font size for x-axis labels
axis.text.y = element_text(size = 9),  # Adjust font size for y-axis labels
strip.text.x = element_text(size = 7),  # Adjust font size for x-axis facet
strip.text.y = element_text(size = 7))
median(bb_age_total$age)
median(bb_age_total_2005$age)
bb_age_total_summary_joined %>%
filter(COLONY == 'CROZ') %>%
ggplot() +
geom_bar(aes(x = age, y = propAge * 100, fill = age), color = 'black', stat = 'Identity') +
scale_fill_steps2(low = "#2A186CFF",
mid = "#3B9287FF",
high = "#FDEF9AFF",
midpoint = 6,
name = 'Age (Years)') +
labs(x = 'Age (Years)', y = 'Percentage of Bands Seen (%)') +
facet_grid(SEASON_FYR~.) +
theme_classic() +
ggtitle("Crozier Historic Age Distribution") +
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(size = 9),  # Adjust font size for x-axis labels
axis.text.y = element_text(size = 9),  # Adjust font size for y-axis labels
strip.text.x = element_text(size = 7),  # Adjust font size for x-axis facet
strip.text.y = element_text(size = 7))
bb_age_breeder <-
curr_all_rs %>%
filter(COLONY=="CROZ") %>%
left_join(band_numbs, by = c('BANDNUMB')) %>%
mutate(age = SEASON_FYR - bandYear) %>%
filter(!is.na(age)) %>%
filter(age >= 0) %>%
filter(STATUS != "DEAD", STATUS !="DEAD?") %>%
filter(((NUCH>0 & NUCH <9)|(NUEGG >0 & NUEGG<9))) %>%
distinct(SEASON_FYR, BANDNUMB, .keep_all = TRUE)
bb_age_breeder_summary <-
bb_age_breeder %>% # View()
# include this next line for breeders specifically
filter(((NUCH>0 & NUCH <9)|(NUEGG >0 & NUEGG<9)))%>%
group_by(COLONY, SEASON_FYR, age) %>%
summarise(count = n_distinct(BANDNUMB)) %>%
group_by(COLONY, SEASON_FYR) %>%
mutate(total = sum(count),
propAge = count/total) %>%
ungroup() %>%
filter(SEASON_FYR == curr_seas_yr) %>%
filter(age != -7976)%>%
rbind(
(bb_age_breeder %>% # View()
# include this next line for breeders specifically
filter(((NUCH>0 & NUCH <9)|(NUEGG >0 & NUEGG<9)))%>%
group_by(COLONY, SEASON_FYR, age) %>%
summarise(count = n_distinct(BANDNUMB)) %>%
# seem to be some erronious bands
filter(age >= 0) %>%
group_by(COLONY, SEASON_FYR) %>%
mutate(total = sum(count),
propAge = count/total) %>%
group_by(COLONY, age) %>%
summarize(propAge = mean(propAge, na.rm = T)) %>%
ungroup() %>%
mutate(count = NA,
total = NA,
SEASON_FYR = 'Long-Term')))
bb_age_breeder_2005 <-
curr_all_rs %>%
filter(COLONY=="CROZ") %>%
left_join(band_numbs, by = c('BANDNUMB')) %>%
mutate(age = SEASON_FYR - bandYear) %>%
filter(!is.na(age)) %>%
filter(SEASON_FYR >= 2005) %>%
filter(age >= 0) %>%
filter(STATUS != "DEAD", STATUS !="DEAD?") %>%
filter(((NUCH>0 & NUCH <9)|(NUEGG >0 & NUEGG<9))) %>%
distinct(SEASON_FYR, BANDNUMB, .keep_all = TRUE)
View(bb_age_breeder_2005)
bb_age_breeder_summary_2005 <-
bb_age_breeder_2005 %>% # View()
group_by(COLONY, SEASON_FYR, age) %>%
summarise(count = n_distinct(BANDNUMB)) %>%
group_by(COLONY, SEASON_FYR) %>%
mutate(total = sum(count),
propAge = count/total) %>%
ungroup() %>%
filter(SEASON_FYR == curr_seas_yr) %>%
filter(age >= 0)%>%
rbind(
(bb_age_breeder_2005 %>% # View()
# include this next line for breeders specifically
filter(((NUCH>0 & NUCH <9)|(NUEGG >0 & NUEGG<9))) %>%
group_by(COLONY, SEASON_FYR, age) %>%
summarise(count = n_distinct(BANDNUMB)) %>%
# seem to be some erronious bands
filter(age >= 0) %>%
group_by(COLONY, SEASON_FYR) %>%
mutate(total = sum(count),
propAge = count/total) %>%
group_by(COLONY, age) %>%
summarize(propAge = mean(propAge, na.rm = T)) %>%
ungroup() %>%
mutate(count = NA,
total = NA,
SEASON_FYR = 'Long-Term from 2005')))
bb_age_breeder_summary_2005 <-
bb_age_breeder_2005 %>% # View()
group_by(COLONY, SEASON_FYR, age) %>%
summarise(count = n_distinct(BANDNUMB)) %>%
group_by(COLONY, SEASON_FYR) %>%
mutate(total = sum(count),
propAge = count/total) %>%
ungroup() %>%
filter(SEASON_FYR == curr_seas_yr) %>%
filter(age >= 0)%>%
rbind(
(bb_age_breeder_2005 %>% # View()
# include this next line for breeders specifically
filter(((NUCH>0 & NUCH <9)|(NUEGG >0 & NUEGG<9))) %>%
group_by(COLONY, SEASON_FYR, age) %>%
summarise(count = n_distinct(BANDNUMB)) %>%
# seem to be some erronious bands
filter(age >= 0) %>%
group_by(COLONY, SEASON_FYR) %>%
mutate(total = sum(count),
propAge = count/total) %>%
group_by(COLONY, age) %>%
summarize(propAge = mean(propAge, na.rm = T)) %>%
ungroup() %>%
mutate(count = NA,
total = NA,
SEASON_FYR = 'Long-Term from 2005')))
bb_age_breeder_summary_joined <- bind_rows(bb_age_breeder_summary, bb_age_breeder_summary_2005) %>%
filter(SEASON_FYR != 2023) %>%
mutate(SEASON_FYR = ifelse(SEASON_FYR == "Long-Term", "Long-Term Full", SEASON_FYR))
View(bb_age_breeder_summary_joined)
bb_age_breeder_summary_joined %>%
filter(COLONY == 'CROZ') %>%
ggplot() +
geom_bar(aes(x = age, y = propAge * 100, fill = age), color = 'black', stat = 'Identity') +
scale_fill_steps2(low = "#2A186CFF",
mid = "#3B9287FF",
high = "#FDEF9AFF",
midpoint = 6,
name = 'Age (Years)') +
labs(x = 'Age (Years)', y = 'Percentage of Bands Seen (%)') +
facet_grid(SEASON_FYR~.) +
theme_classic() +
ggtitle("Crozier Historic Breeder Age Distribution") +
theme(plot.title = element_text(hjust = 0.5),
axis.text.x = element_text(size = 9),  # Adjust font size for x-axis labels
axis.text.y = element_text(size = 9),  # Adjust font size for y-axis labels
strip.text.x = element_text(size = 7),  # Adjust font size for x-axis facet
strip.text.y = element_text(size = 7)) +
scale_x_continuous(limits = c(0, max(bb_age_breeder_summary_joined$age))) +
scale_y_continuous(limits = c(0, 20))  # Set y-axis limits
median(bb_age_breeder$age)
median(bb_age_breeder_2005$age)
uniq_ids <- filter(na.omit(distinct(wbdata, avid)), avid<9999999|avid>600000000) #  filter gets rid of the bogus 599 numbers
xings_summary <- wbdata %>%
filter(event == "ID",
avid<9999999|avid>600000000) %>%
# DK added this line, don't know why but it seems necessary for the as.Date conversion to work in the next one.
mutate(date = mdy_hms(datetime, tz = "NZ")) %>%
mutate(date = as.Date(date)) %>%
distinct(date, avid) %>%
# mutate(day = day(date)) %>%
group_by(date) %>%
summarise(n=n())
uniq_ids <- filter(na.omit(distinct(wbdata, avid)), avid<9999999|avid>600000000) #  filter gets rid of the bogus 599 numbers
print(uniq_ids)
#1. Source validation function
source("code/validation_functions.R")
# Script to run validation functions
setwd("Z:/Informatics/S031/analyses/RI_penguin_count_UAV/code")
#1. Source validation function
source("code/validation_functions.R")
#1. Source validation function
source("Z:/Informatics/S031/analyses/RI_penguin_count_UAV/code/validation_functions.R")
db_name = "data/UAVSurveys.db"
colony = "croz"
date = "2018-11"
create_validation_shapefiles(db_name = db_name, colony = colony, date = date)
source("Z:/Informatics/S031/analyses/RI_penguin_count_UAV/code/calculate_validation_stats.R")
source("Z:/Informatics/S031/analyses/RI_penguin_count_UAV/code/calculate_validation_stats.R")
#1. Source validation function
source("code/validation_functions.R")
source("Z:/Informatics/S031/analyses/RI_penguin_count_UAV/code/combine_ground_count_data.R")
library(readODS)
library("XLConnect")
library(dplyr)
library(tidyr)
library(readxl)
library(RSQLite)
###----CROZIER----###
# 1819 ####
# load M adult counts
m_ad_1819_raw <- read.csv("Z:/Informatics/S031/S0311819/croz1819/chick counts/adultcount_1819.csv",header=TRUE)
# Calculate average counts
croz_adct_1819 <- m_ad_1819_raw %>%
group_by(subcolony) %>%
summarise(active_ct = mean(activenests, na.rm = TRUE),
occ_ct = mean(occupiedterritories, na.rm = TRUE),
total_ct =mean(totalindividuals, na.rm = TRUE)) %>%
filter(!active_ct==(is.na(active_ct))) %>%
ungroup() %>%
mutate(season = "2018",
col = "croz",
area_name = "m",
date = as.Date("11/28/2018", format = "%m/%d/%Y"))
# 1920 ####
# load M adult counts
m_ad_1920_raw <- readWorksheet(loadWorkbook("Z:/Informatics/S031/S0311920/croz1920/counts/adultcount_1920.xlsx"), sheet = 1)
croz_adct_1920 <- m_ad_1920_raw %>%
group_by(subcolony) %>%
summarise(active_ct = mean(activenests, na.rm = TRUE),
occ_ct = mean(occupiedterritories, na.rm = TRUE),
total_ct =mean(totalindividuals, na.rm = TRUE)) %>%
filter(!active_ct==(is.na(active_ct))) %>%
ungroup() %>%
mutate(season = "2019",
col = "croz",
area_name = "m",
date = as.Date("11/28/2019", format = "%m/%d/%Y"))
# 2021 ####
# load M adult counts
m_ad_2021_raw <- read.csv("Z:/Informatics/S031/S0312021/croz2021/counts/ADPE census/adultcount_2021.csv", header = TRUE)
croz_adct_2021 <- m_ad_2021_raw %>%
group_by(subcolony) %>%
summarise(active_ct = mean(activenests, na.rm = TRUE),
occ_ct = mean(occupiedterritories, na.rm = TRUE),
total_ct =mean(totalindividuals, na.rm = TRUE)) %>%
filter(!active_ct==(is.na(active_ct))) %>%
ungroup() %>%
mutate(season = "2020",
col = "croz",
area_name = "m",
date = as.Date("11/30/2020", format = "%m/%d/%Y"))
# 2122 ####
# load M adult counts
m_ad_2122_raw <- read.csv("Z:/Informatics/S031/S0312122/croz2122/counts/ADPE census/adultcount_2122.csv", header = TRUE)
# calculate average count
croz_adct_2122 <- m_ad_2122_raw %>%
group_by(subcolony) %>%
summarise(active_ct = mean(activenests, na.rm = TRUE),
occ_ct = mean(occupiedterritories, na.rm = TRUE),
total_ct =mean(totalindividuals, na.rm = TRUE)) %>%
filter(!active_ct==(is.na(active_ct))) %>%
ungroup() %>%
mutate(season = "2021",
col = "croz",
area_name = "m",
date = as.Date("11/29/2021", format = "%m/%d/%Y"))
# 2223 ####
# load M adult counts
m_ad_2223_raw <- read.csv("Z:/Informatics/S031/S0312223/croz2223/counts/ADPE census/adultcount_2223.csv", header = TRUE)
# calculate average count
croz_adct_2223 <- m_ad_2223_raw %>%
group_by(subcolony) %>%
summarise(active_ct = mean(activenests, na.rm = TRUE),
occ_ct = mean(occupiedterritories, na.rm = TRUE),
total_ct =mean(totalindividuals, na.rm = TRUE)) %>%
filter(!active_ct==(is.na(active_ct))) %>%
ungroup() %>%
mutate(season = "2022",
col = "croz",
area_name = "m",
date = as.Date("11/29/2022", format = "%m/%d/%Y"))
# 2324 ####
# load M adult counts
m_ad_2324_raw <- read.csv("Z:/Informatics/S031/S0312324/croz2324/counts/adpe census/adultcount_2324.csv", header = TRUE)
# calculate average count
croz_adct_2324 <- m_ad_2324_raw %>%
group_by(subcolony) %>%
summarise(occ_ct = mean(occupiedterritories, na.rm = TRUE),
avg_inactivenests = mean(inactivenests, na.rm = TRUE),
avg_extras = mean(extras, na.rm = TRUE)) %>%
mutate(active_ct = occ_ct - avg_inactivenests,
total_ct = occ_ct + avg_extras) %>%
filter(!active_ct==(is.na(active_ct))) %>%
ungroup() %>%
dplyr::select(-avg_inactivenests, -avg_extras) %>%
mutate(season = "2023",
col = "croz",
area_name = "m",
date = as.Date("11/28/2023", format = "%m/%d/%Y"))
#-----------merge Crozier data------------#
#merge adult data ####
#make lists with all tables names for adults
croz_adct_list <- list(croz_adct_1819, croz_adct_1920, croz_adct_2021, croz_adct_2122, croz_adct_2223, croz_adct_2324)
croz_adct_all <- as.data.frame(croz_adct_list[1])
#join adult data
for(i in 2:length(croz_adct_list)){
crozdf = data.frame(croz_adct_list[i])
croz_adct_all <- full_join(croz_adct_all,crozdf)
}
#clean up adult data ####
croz_adct_all <- croz_adct_all %>%
mutate(subcolony = plyr::mapvalues(subcolony,
from = c("14A","16+22", "22 & 16","22-16","22-16-A",
"22-16A","6A","9 & 10", "35", "5A","1A",
"15 & 17", "15+17 terrace", "39+40", "32+31A", "22A", "23A", "14-14A", "6a", "6", "6-6A"),
to = c("14a",rep("16-22",3),"22a","22a","6-6a","9-10",
"33-34-35", "5a", "1a", rep("15-17",2), "39-40",
"31a-32", "22a", "23a", "14-14a", "6-6a", "6-6a", "6-6a"))) %>%
rename(subcol = subcolony,
area = area_name) %>%
filter(subcol != "31a", subcol != "33-34-35")
###----ROYDS----###
# 1819 ####
#load and clean adult counts
r_adct_1819 <- read_xlsx(
"Z:/Informatics/S031/S0311819/royds1819/Adult&Chick counts/Royds Annual Ground Count 1011_1819.xlsx",
sheet = "11_27_18",
skip = 5,
col_names = TRUE,
n_max = 27) %>%
select(Subcolony, `Occup Territories...2`, `Active Territories`, `# Individuals`) %>%
slice(-21:-27) %>%
rename(subcol = Subcolony) %>%
mutate(subcol = plyr::mapvalues(
subcol,
from = c("14a/b", "19 (wb1)"),
to = c("14a-b", "19")
)) %>%
rename(occ_ct = `Occup Territories...2`,
active_ct = `Active Territories`,
total_ct = `# Individuals`) %>%
mutate(season = "2018",
date = as.Date("11/28/2018", format = "%m/%d/%Y"))
# 1920 ####
r_adct_1920 <- read_xlsx(
"Z:/Informatics/S031/S0311920/royds1920/Adult&Chick counts/Royds Annual Ground Count 1011_1920.xlsx",
sheet = "11_28_19",
skip = 6,
col_names = TRUE,
n_max = 27) %>%
select(Subcolony, `Occup Territories`, `Active Territories...4`, `# Individuals`) %>%
slice(-22:-27) %>%
rename(subcol = Subcolony,
occ_ct = `Occup Territories`,
active_ct = `Active Territories...4`,
total_ct = `# Individuals`) %>%
mutate(subcol = plyr::mapvalues(subcol,
from = c("14a/b", "19 (wb1)"),
to = c("14a-b", "19"))) %>%
mutate(season = "2019",
date = as.Date("11/27/2019", format = "%m/%d/%Y")) %>%
filter(subcol != "11/12") #remove subcolony 11/12 for comparison to other seasons
# 2021 ####
r_adct_2021 <-
read_xls("Z:/Informatics/S031/S0312021/royds2021/counts/nestcount_Royds2021.xls",
sheet = "Royds2021",
skip = 1,
col_names = TRUE) %>%
filter (SOURCE != "photo",
DATE == as.Date("2020-12-01")) %>%
mutate(occ_ct = rowSums(select(., c("ACTIVE", "INACTIVE")), na.rm = TRUE)) %>%
rename (total_ct = ADULTS) %>%
select(SUBCOL, occ_ct, total_ct, ACTIVE) %>%
rename (subcol = SUBCOL,
active_ct = ACTIVE) %>%
group_by(subcol) %>%
summarize(occ_ct = mean(occ_ct, na.rm = TRUE),
active_ct = mean(active_ct, na.rm = TRUE),
total_ct = mean (total_ct, na.rm = TRUE)) %>%
mutate (season = "2020",
date = as.Date("12/1/2020", format = "%m/%d/%Y")) %>%
filter(subcol != "11-12")
# 2122 ####
#load and clean adult counts
r_adct_2122 <-
read.csv("Z:/Informatics/S031/S0312122/royds2122/counts/adultcount_2122.csv") %>%
select(subcolony, occupiedterritories, totalindividuals, activenests) %>%
group_by(subcolony) %>%
rename (subcol = subcolony, occ_ct = occupiedterritories,
total_ct = totalindividuals, active_ct = activenests) %>%
summarize(occ_ct = mean(occ_ct, na.rm = TRUE),
total_ct = mean(total_ct, na.rm = TRUE),
active_ct = mean(active_ct, na.rm = TRUE)) %>%
mutate (season = "2021",
date = as.Date("12/2/2021", format = "%m/%d/%Y"))
# 2223 ####
# load in counts from non-archaic source AKA the CSVs we already have
r_adct_2223 <-
read.csv("Z:/Informatics/S031/S0312223/royds2223/counts/adultcount_2223.csv") %>%
select(subcolony, occupiedterritories, totalindividuals, activenests) %>%
group_by(subcolony) %>%
rename (subcol = subcolony, occ_ct = occupiedterritories,
total_ct = totalindividuals, active_ct = activenests) %>%
summarize(occ_ct = mean(occ_ct, na.rm = TRUE),
total_ct = mean(total_ct, na.rm = TRUE),
active_ct = mean(active_ct, na.rm = TRUE)) %>%
mutate (season = "2022",
date = as.Date("11/29/2022", format = "%m/%d/%Y"))
# 2324 ####
# load in counts from non-archaic source AKA the CSVs we already have
r_adct_2324 <-
read.csv("Z:/Informatics/S031/S0312324/royds2324/counts/adultcount_2324.csv") %>%
select(subcolony, occupiedterritories, totalindividuals, activenests) %>%
group_by(subcolony) %>%
rename (subcol = subcolony, occ_ct = occupiedterritories,
total_ct = totalindividuals, active_ct = activenests) %>%
summarize(occ_ct = mean(occ_ct, na.rm = TRUE),
total_ct = mean(total_ct, na.rm = TRUE),
active_ct = mean(active_ct, na.rm = TRUE)) %>%
mutate (season = "2023",
date = as.Date("12/8/2023", format = "%m/%d/%Y"))
#-----------merge Royds data------------#
#merge adult data ####
#make lists with all tables names for adults
royd_adct_list <- list(r_adct_1819, r_adct_1920, r_adct_2021, r_adct_2122, r_adct_2223, r_adct_2324)
royd_adct_all <- as.data.frame(royd_adct_list[1])
#join adult data
for(i in 2:length(royd_adct_list)){
royddf = data.frame(royd_adct_list[i])
royd_adct_all <- full_join(royd_adct_all,royddf)
}
#clean up adult data ####
royd_adct_all <- royd_adct_all %>%
mutate(subcol = plyr::mapvalues(subcol,
from = c(
"11/12", "14a/b", "19 (wb)", "19 (WB1)","19a/b (wb)",
"wb1", "WB1", "1a+b","1ab", "2ab","3a+b","3ab", "4+17",
"5+18", "6+8a", "7+8b","8 (reference)", "9+10",
"9s + 13", "9S & 13", "14ab", "14AB", "1B", "1A", "1C", "3A", "3C",
"9N", "10N", "10S", "WB2", "20B", "20A", "9S"),
to = c(
"11-12", "14a-b", "19", "19", "19",
"19", "19", "1a-b", "1a-b", "2a-b", "3a-b", "3a-b", "4-17",
"5-18", "6-8a", "7-8b","8", "9-10",
"9-13", "9-13", "14a-b", "14a-b", "1b", "1a", "1c", "3a", "3c",
"9n", "10n", "10s", "wb2", "20b", "20a", "9s")),
area = "royd", col = "royd")
###----BIRD----###
# 2122 ####
#Ground count performed by kiwis with no other data beside "nests". Not including (for now).
#bird_adct_2122 <- read_ods("Z:/Informatics/S031/S0312122/bird2122/productivity2021_2022.ods",
#                           sheet = 1, range = "A1:E12") %>%
#  mutate(occ_ct = rowMeans(select(., c("SamBrown", "MorganColeman")), na.rm = TRUE),
#         season = "2021",
#         date = as.Date("12/01/2021", format = "%m/%d/%Y")) %>%
#  dplyr::select(-measured, -SamBrown, -MorganColeman) %>%
#  rename(subcol = colony)
# 2223 ####
bird_adct_2223 <- read.csv("Z:/Informatics/S031/S0312223/bird2223/counts/adultcount_2223.csv") %>%
dplyr::select(-initials, -Proofed) %>%
na.omit(subset = c(occupiedterritories)) %>%
group_by(subcolony) %>%
summarise(active_ct = mean(activenests, na.rm = TRUE),
occ_ct = mean(occupiedterritories, na.rm = TRUE),
total_ct =mean(totalindividuals, na.rm = TRUE)) %>%
rename (subcol = subcolony) %>%
mutate(date = as.Date("11/27/2022", format = "%m/%d/%Y"),
season = "2022")
# 2324 ####
bird_adct_2324 <- read_xlsx("Z:/Informatics/S031/S0312324/bird2324/counts/adultcount_2324.xlsx", col_names = TRUE) %>%
select(date, subcolony, occupiedterritories, inactivenests, extras) %>%
group_by(subcolony) %>%
summarise(occ_ct = mean(occupiedterritories, na.rm = TRUE),
avg_inactivenests = mean(inactivenests, na.rm = TRUE),
avg_extras = mean(extras, na.rm = TRUE)) %>%
mutate(active_ct = occ_ct - avg_inactivenests,
total_ct = occ_ct + avg_extras,
season = "2023",
date = as.Date("11/30/2023", format = "%m/%d/%Y")) %>%
filter(!active_ct==(is.na(active_ct))) %>%
ungroup() %>%
dplyr::select(-avg_inactivenests, -avg_extras) %>%
rename (subcol = subcolony)
#-----------merge Bird data------------#
bird_adct_list <- list(bird_adct_2223, bird_adct_2324)
bird_adct_all <- as.data.frame(bird_adct_list[1])
#join adult data
for(i in 2:length(bird_adct_list)){
birddf = data.frame(bird_adct_list[i])
bird_adct_all <- full_join(bird_adct_all,birddf)
}
bird_adct_all <-bird_adct_all %>%
mutate(subcol = plyr::mapvalues(subcol,
from = c("EMMA", "FIONA", "OLD", "WB18", "WB19"),
to = c("Emma", "Fiona", "old", "wb18", "wb19")),
area = "north",
col = "bird")
####----------The Big Kahuna------------####
#join all colonies together
allcol_adct_list <- list(croz_adct_all, royd_adct_all, bird_adct_all)
allcol_adct_all <- as.data.frame(allcol_adct_list[1])
for(i in 2:length(allcol_adct_list)){
allcoldf = data.frame(allcol_adct_list[i])
allcol_adct_all <- full_join(allcol_adct_all,allcoldf)
}
allcol_adct_all <- allcol_adct_all %>%
mutate(notes = "") %>%
select(col, season, date, subcol, active_ct, occ_ct, total_ct, notes) %>%
mutate(date = as.character(date),
active_ct = round(active_ct),
occ_ct = round(occ_ct),
total_ct = round(total_ct)
